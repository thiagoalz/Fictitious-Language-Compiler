/*
 * Interface.java
 *
 * Created on 10 de Setembro de 2005, 15:38
 */

package compilador;

import erros.*;
import java.awt.Color;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JMenu;

/**
* This code was generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* *************************************
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED
* for this machine, so Jigloo or this code cannot be used legally
* for any corporate or commercial purpose.
* *************************************
*/
/**
 *
 * @author  thiago
 */
public class Interface extends javax.swing.JFrame{
    Compilador compilador;
    CompiladorIO io;    
    Color corDefSelection,corDefSelectedText;
    
    /** Creates new form Interface */
    public Interface() {
        compilador=new Compilador();
        io = new CompiladorIO();
        initComponents();
        this.corDefSelection=this.jTextPaneCodigo.getSelectionColor();
        this.corDefSelectedText=this.jTextPaneCodigo.getSelectedTextColor();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPaneCodigo = new javax.swing.JTextPane();
        menuBar = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        menuitemNovo = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        menuItemAbrir = new javax.swing.JMenuItem();
        menuItemSalvar = new javax.swing.JMenuItem();
        menuItemSalvarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        menuItemSair = new javax.swing.JMenuItem();
        menuEditar = new javax.swing.JMenu();
        menuItemRecortar = new javax.swing.JMenuItem();
        menuItemCopiar = new javax.swing.JMenuItem();
        menuItemColar = new javax.swing.JMenuItem();
        menuItemDeletar = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        menuitemConfiguracoes = new javax.swing.JMenuItem();
        menuAjuda = new javax.swing.JMenu();
        menuItemDuvidas = new javax.swing.JMenuItem();
        menuItemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador Por:Thiago e Jo\u00e3o");
        jScrollPane1.setAutoscrolls(true);
        jScrollPane1.setViewportView(jTextPaneCodigo);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        menuArquivo.setMnemonic('a');
        menuArquivo.setText("Arquivo");
        menuitemNovo.setMnemonic('n');
        menuitemNovo.setText("Novo");
        menuitemNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuitemNovoActionPerformed(evt);
            }
        });

        menuArquivo.add(menuitemNovo);

        menuArquivo.add(jSeparator3);

        menuItemAbrir.setMnemonic('a');
        menuItemAbrir.setText("Abrir");
        menuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAbrirActionPerformed(evt);
            }
        });

        menuArquivo.add(menuItemAbrir);

        menuItemSalvar.setMnemonic('s');
        menuItemSalvar.setText("Salvar");
        menuItemSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalvarActionPerformed(evt);
            }
        });

        menuArquivo.add(menuItemSalvar);

        menuItemSalvarComo.setMnemonic('c');
        menuItemSalvarComo.setText("Salvar Como ...");
        menuItemSalvarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSalvarComoActionPerformed(evt);
            }
        });

        menuArquivo.add(menuItemSalvarComo);

        menuArquivo.add(jSeparator1);

        menuItemSair.setMnemonic('r');
        menuItemSair.setText("Sair");
        menuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSairActionPerformed(evt);
            }
        });

        menuArquivo.add(menuItemSair);

        menuBar.add(menuArquivo);

        menuEditar.setMnemonic('e');
        menuEditar.setText("Editar");
        menuItemRecortar.setMnemonic('r');
        menuItemRecortar.setText("Recortar");
        menuItemRecortar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemRecortarActionPerformed(evt);
            }
        });

        menuEditar.add(menuItemRecortar);

        menuItemCopiar.setMnemonic('p');
        menuItemCopiar.setText("Copiar");
        menuItemCopiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemCopiarActionPerformed(evt);
            }
        });

        menuEditar.add(menuItemCopiar);

        menuItemColar.setMnemonic('c');
        menuItemColar.setText("Colar");
        menuItemColar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemColarActionPerformed(evt);
            }
        });

        menuEditar.add(menuItemColar);

        menuItemDeletar.setMnemonic('d');
        menuItemDeletar.setText("Deletar");
        menuItemDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemDeletarActionPerformed(evt);
            }
        });

        menuEditar.add(menuItemDeletar);

        menuEditar.add(jSeparator2);

        menuitemConfiguracoes.setMnemonic('o');
        menuitemConfiguracoes.setText("Configura\u00e7\u00f5es");
        menuEditar.add(menuitemConfiguracoes);

        menuBar.add(menuEditar);

        menuAjuda.setMnemonic('j');
        menuAjuda.setText("Ajuda");
        menuItemDuvidas.setText("Duvidas");
        menuAjuda.add(menuItemDuvidas);

        menuItemSobre.setText("Sobre");
        menuAjuda.add(menuItemSobre);

        menuBar.add(menuAjuda);
		{
			jMenuCompilar = new JMenu();
			menuBar.add(jMenuCompilar);
			jMenuCompilar.setText("Compilar");
			jMenuCompilar.addMouseListener(new MouseAdapter() {
				public void mouseClicked(MouseEvent evt) {
					jMenuCompilarMouseClicked(evt);
				}
			});
		}

        setJMenuBar(menuBar);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-800)/2, (screenSize.height-600)/2, 800, 600);
    }//GEN-END:initComponents

    private void menuItemSalvarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalvarComoActionPerformed
        try{
            io.saveAsFile(this.jTextPaneCodigo.getText());
        }catch(Exception e){
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_menuItemSalvarComoActionPerformed
    
    private void menuItemSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSalvarActionPerformed
        try{
            io.saveFile(this.jTextPaneCodigo.getText());
        }catch(Exception e){
            System.out.println(e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_menuItemSalvarActionPerformed
    
    private void menuitemNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuitemNovoActionPerformed
        //pode verificar se o arq aberto esta salvo
        this.jTextPaneCodigo.setText("");
        this.io.resetFile();
    }//GEN-LAST:event_menuitemNovoActionPerformed
    
    private void menuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAbrirActionPerformed
        //escreve no arquivo aberto
        //ler o arq todo e escreve na tela
        try{
            String novoTexto = io.openFile();
            jTextPaneCodigo.setText(novoTexto);
        }catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_menuItemAbrirActionPerformed
    
    private void menuItemDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemDeletarActionPerformed
        jTextPaneCodigo.replaceSelection("");
    }//GEN-LAST:event_menuItemDeletarActionPerformed
    
    private void menuItemRecortarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemRecortarActionPerformed
        jTextPaneCodigo.cut();
    }//GEN-LAST:event_menuItemRecortarActionPerformed
    
    private void menuItemCopiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemCopiarActionPerformed
        jTextPaneCodigo.copy();
    }//GEN-LAST:event_menuItemCopiarActionPerformed
    
    private void menuItemColarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemColarActionPerformed
        jTextPaneCodigo.paste();
    }//GEN-LAST:event_menuItemColarActionPerformed
    
    private void menuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSairActionPerformed
        //verifica se esta salvo o arquivo atual
        System.exit(0);
    }//GEN-LAST:event_menuItemSairActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    
    private void compilar(){
    	try{
            String texto=this.jTextPaneCodigo.getText();
            this.compilador.compilar(texto);
            
            System.out.println("Compilado direitinho");
        }catch(Erro e){
            System.out.println(e.getMessage());
            int primeiroErro=e.getLocal(0);            
            //coloca o ponteiro no primeiro erro
            //this.jTextPaneCodigo.setCaretPosition(primeiroErro);
        }
    }
    
	private void jMenuCompilarMouseClicked(MouseEvent evt) {
		compilar();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private JMenu jMenuCompilar;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextPane jTextPaneCodigo;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuEditar;
    private javax.swing.JMenuItem menuItemAbrir;
    private javax.swing.JMenuItem menuItemColar;
    private javax.swing.JMenuItem menuItemCopiar;
    private javax.swing.JMenuItem menuItemDeletar;
    private javax.swing.JMenuItem menuItemDuvidas;
    private javax.swing.JMenuItem menuItemRecortar;
    private javax.swing.JMenuItem menuItemSair;
    private javax.swing.JMenuItem menuItemSalvar;
    private javax.swing.JMenuItem menuItemSalvarComo;
    private javax.swing.JMenuItem menuItemSobre;
    private javax.swing.JMenuItem menuitemConfiguracoes;
    private javax.swing.JMenuItem menuitemNovo;
    // End of variables declaration//GEN-END:variables
    
}
